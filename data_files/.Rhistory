AIC(mod1d)
AIC(mod1e)
AIC(mod1f)
AIC(mod1g)
AIC(mod1h)
AIC(mod1i)
AIC(mod1j)
# likelihood ratio test for regression model comparison
# Single predictors compared to null model
pchisq(2 * (logLik(mod1b) - logLik(mod1a)), df = 1, lower.tail=FALSE)
pchisq(2 * (logLik(mod1c) - logLik(mod1a)), df = 1, lower.tail=FALSE)
pchisq(2 * (logLik(mod1d) - logLik(mod1a)), df = 1, lower.tail=FALSE)
pchisq(2 * (logLik(mod1e) - logLik(mod1a)), df = 1, lower.tail=FALSE)
# Single predictor (Dscore) compared to two predictors
pchisq(2 * (logLik(mod1f) - logLik(mod1b)), df = 1, lower.tail=FALSE)
pchisq(2 * (logLik(mod1g) - logLik(mod1b)), df = 1, lower.tail=FALSE)
pchisq(2 * (logLik(mod1h) - logLik(mod1b)), df = 1, lower.tail=FALSE)
# Two predictors (Dscore, Volsum) compared to three predictors
pchisq(2 * (logLik(mod1i) - logLik(mod1h)), df = 1, lower.tail=FALSE)
pchisq(2 * (logLik(mod1j) - logLik(mod1h)), df = 1, lower.tail=FALSE)
# Comparison of best supported model to null model
pchisq(2 * (logLik(mod1h) - logLik(mod1a)), df = 2, lower.tail=FALSE)
# Comparison of full model to null model
pchisq(2 * (logLik(mod1) - logLik(mod1a)), df = 4, lower.tail=FALSE)
## Post-hoc comparison of Dscore for species with significantly different (higher and lower) Cscore
sigC_lower <- which(Cscore$pval_less <= 0.05)
sigC_greater <- which(Cscore$pval_greater <= 0.05)
# t-test comparing Dscores of species pairs with lower and higher C scores than expected by chance (less or more coccurence than expected by chance)
t.test(Dscore[sigC_lower],Dscore[sigC_greater])
par(mfrow=c(1,2))
plot(Dscore,CscoreSES,pch=19,col="black")
abline(lm(CscoreSES~Dscore))
points(Dscore[sigC_lower],CscoreSES[sigC_lower],pch=19,col="blue")
points(Dscore[sigC_greater],CscoreSES[sigC_greater],pch=19,col="red")
boxplot(Dscore[sigC_lower],Dscore[sigC_greater],col=c("blue","red"),names=c("Cscore lower","Cscore higher"),ylab="Dscore")
par(mfrow=c(1,1))
# Figure 1. 2D niche use plot --------------------------------
z_uncor<-array(NA,dim=c(16,100,100),dimnames=list(sp.list,rep(paste("y",1:100,sep="")),rep(paste("x",1:100,sep=""))))
z_cor<-array(NA,dim=c(16,100,100),dimnames=list(sp.list,rep(paste("y",1:100,sep="")),rep(paste("x",1:100,sep=""))))
Z<-array(NA,dim=c(16,100,100),dimnames=list(sp.list,rep(paste("y",1:100,sep="")),rep(paste("x",1:100,sep=""))))
for (i in 1:16){
row.sp1 <- which(occ.sp[,28] == sp.list[i]) # rows in data corresponding to sp1
name.sp1 <- sp.list[i]
# predict the scores on the axes
scores.clim <- pca.cal$li[(nrow(occ.sp)+1):nrow(data),] #scores for global climate
scores.sp1 <- pca.cal$li[row.sp1,] #scores for sp1
z1 <- ecospat.grid.clim.dyn(scores.clim[,1:2], scores.clim[,1:2], scores.sp1[,1:2],R=100)
#A grid z of RxR pixels (or a vector of R pixels) with z.uncor being the density of occurrence
#of the species, and z.cor the occupancy of the environment by the species
#(density of occurrences divided by the desinty of environment in the study area).
z_uncor[i,,] <- t(as.matrix(z1$z.uncor))[, nrow(as.matrix(z1$z.uncor)):1]
z_cor[i,,] <- t(as.matrix(z1$z.cor))[, nrow(as.matrix(z1$z.cor)):1]
Z[i,,] <- t(as.matrix(z1$Z))[, nrow(as.matrix(z1$Z)):1]
}
# Contours only
z <- z_uncor[1,,]
z[z==0] <- NA
svg(paste(getwd(),"/raw_output/Fig_1.svg",sep=""),height=(984/300),width=(1476/300))
par(mar=c(3,3,2,1))
name.axis1 <- "PC-env axis 1"
name.axis2 <- "PC-env axis 2"
image(x = z1$x, y = z1$y, z = z, col = "white", zlim = c(1e-05, 1), xlab = name.axis1, ylab = name.axis2, useRaster=T)
# Graphic settings
cont_col <- rep("red",16)
cont_col[BodySize$Body_size_category == "Small"] <- "blue"
# PC-env lines
alt_name <- c("shade","sludge","snell","cond","pH","depth","O2","Chla","SPM","ALK","","DOC","tN","tP","aN","aP","SA","vSUB","","","vOV")
line <- array(NA,dim=c(2*(length(rownames(pca.cal$co))),3),dimnames=list(c(paste(alt_name,"0",sep=""),paste(alt_name,"1",sep="")),c("x","y","z")))
line[1:length(rownames(pca.cal$co)),1:3] <- 0
line[(length((rownames(pca.cal$co))) + 1):length(line[,1]),1] <- pca.cal$co[,1]/1.5
line[(length((rownames(pca.cal$co))) + 1):length(line[,1]),2] <- pca.cal$co[,2]/1.5
line[(length((rownames(pca.cal$co))) + 1):length(line[,1]),3] <- 0
ord <- c(seq(1,42,by=2),seq(2,42,by=2))
line <- line[order(ord),]
segments(0,0,line[,1],line[,2],col=rgb(0,0,0,100,maxColorValue = 255),lwd=1)
text <- cbind(pca.cal$co[,1:2]/1.5,rep(0,length(pca.cal$co[,1])))
text(text[,1],text[,2],alt_name,col="black",cex=.8,lwd=2,adj=c(1,1))
# Species contours at 97.5%
quant <- .975
for(i in 1:16){
sub <- z_uncor[i,,]
z <- z_uncor[i,,]
z[z==0] <- NA
contour(x = z1$x, y = z1$y, z =z, levels = quantile(sub[sub > 0], c(0, quant)), drawlabels = FALSE, lty = 1, col = cont_col[i], add=T, lwd=1.5)
}
dev.off()
## This is a 3-dimensional version of the niche plot (not included in the manuscript). I recommend saving your progress up to this point, as from time to time my R Studio session was aborted. Lines 697-728.
#### 3D, by body size category
#Example plot: 3D
#Create record of desired color values for each point
col_possible <- c("green","red","blue","darkmagenta","darkorange","gray","lightcoral","cyan","mediumorchid1","deepskyblue","goldenrod","navajowhite","mediumaquamarine","plum1","darkcyan","darkgreen","dimgray","firebrick4","gainsboro","darkseagreen4")
# Small
ramp_1 <- colorRamp(c(col_possible[1],"white"))
col_1 <- ramp_1(seq(0, 1, length = 100))
col_2 <- rgb(col_1, max = 255)
z <- z_uncor[1,,]
z[z==0] <- NA
persp3d(z1$x, z1$y, z, theta=50, phi=25, expand=0.75, col=rev(col_2),alpha=0.5,ticktype="detailed", xlab="", ylab="time", zlab="",axes=TRUE,NAcol=rgb(255,255,255,0,max=255),xlim=c(-5,5.4),ylim=c(-5,5.4))
small_rec <- which(BodySize$Body_size_category == "Small")
l_small <- length(small_rec)
for(i in 2:l_small){
ramp_1 <- colorRamp(c(col_possible[small_rec[i]],"white"))
col_1 <- ramp_1(seq(0, 1, length = 100))
col_2 <- rgb(col_1, max = 255)
z <- z_uncor[small_rec[i],,]
z[z == 0] <- NA
persp3d(z1$x, z1$y, z, theta=50, phi=25, expand=0.75, col=rev(col_2),alpha=0.5,ticktype="detailed", xlab="", ylab="time", zlab="",axes=F,NAcol=rgb(255,255,255,0,max=255),xlim=c(-5,5.4),ylim=c(-5,5.4),add=T)
}
for(i in 1:16){
# for easier visualization, use
#for(i in 1:8){
sub <- z_uncor[i,,]
contour(x = z1$x, y = z1$y, z =z, add = TRUE, levels = quantile(sub[sub > 0], c(0, quant)), drawlabels = FALSE, lty = c(1,2), col = "black")
}
alt_name3d <- c("shade","sludge","snell","cond","pH","depth","O2","Chla","SPM","ALK","","DOC","tN","tP","aN","aP","SA","vSUB","","","vOV")
line <- array(NA,dim=c(2*(length(rownames(pca.cal$co))),3),dimnames=list(c(paste(alt_name,"0",sep=""),paste(alt_name,"1",sep="")),c("x","y","z")))
line[1:length(rownames(pca.cal$co)),1:3] <- 0
line[(length((rownames(pca.cal$co))) + 1):length(line[,1]),1] <- pca.cal$co[,1]/1.5
line[(length((rownames(pca.cal$co))) + 1):length(line[,1]),2] <- pca.cal$co[,2]/1.5
line[(length((rownames(pca.cal$co))) + 1):length(line[,1]),3] <- 0
ord <- c(seq(1,42,by=2),seq(2,42,by=2))
line <- line[order(ord),]
segments3d(line,col="black",add=T,lwd=3)
text <- cbind(pca.cal$co[,1:2]/1.5,rep(0,length(pca.cal$co[,1])))
text3d(text[,1],text[,2],text[,3],alt_name3d,col="black",cex=1,lwd=3,add=T)
# Figure 2. LDA density plot of body size ---------------------------------
svg(paste(getwd(),"/raw_output/Fig_2.svg",sep=""),height=(984/300),width=(1476/300))
par(mar=c(4, 4, 0, 2) + 0.1)
x1 <- dfa_results$x[BodySize$Body_size_category=="Large"]
x2 <- dfa_results$x[BodySize$Body_size_category=="Small"]
x <-  dfa_results$x
hist(x,freq=F,breaks=20,ylim=c(0,.8),xlim=c(-2,4),axes=F,xlab="LDA 1",ylab="Density",border="white",main="",col="white")
axis(side=2, at=c(0,.2,.4,.6,.8))
axis(side=1, at=c(-2,-1,0,1,2,3), pos=-.08)
d1 <- density(x1)
d2 <- density(x2)
lines(d1)
lines(d2)
polygon(d1,col=rgb(255,0,0,75,max=255))
polygon(d2,col=rgb(0,0,255,75,max=255))
segments(x1,rep(0,length(x1)),x1,rep(-.05,length(x1)),col="red")
segments(x2,rep(0,length(x2)),x2,rep(-.05,length(x2)),col="blue")
#large
text(x1,rep(-.005,length(x1)),labels=sp.list[c(6:9,15:16)],srt=45,adj=c(-.1,0),cex=.6,col="red")
#small
text(x2,rep(-.005,length(x2)),labels=sp.list[c(1:5,10:14)],srt=45,adj=c(-.1,0),cex=.6,col="blue")
dev.off()
## In case you are interested to see how the environmental variables scale on the LD1 axis. This code is derived from Pantel et al. 2022, Ecological Monographs. Please consider citing if this ends up being used in a publication (if not, I hope you are citing this code repository at least!).
## Scaling of env vars with LD1
x1 <- -10*dfa$scaling[1]
y1 <- -10*dfa$scaling[2]
x2 <- 10*dfa$scaling[1]
y2 <- 10*dfa$scaling[2]
# Here you have the slope and intercept to add a line onto the PCA biplot that indicates where the DFA line lies
slope <- (y2 - y1)/(x2-x1)
intercept <- y1 - slope*x1
env_points <- pca.cal$co[,1:2]
# Here you would have the x-y coordinates to add the location of a given environmental variable to the DFA line.
shade <- c(pca.cal$co[1,1]*dfa$scaling[1],pca.cal$co[1,2]*dfa$scaling[2])
# Figure 3. Rural and urban niche shift plots, 50m and 3200m scale --------
for (i in 1:length(sp.list)){
# 50m scale
scores.clim<- pca.cal$li[(nrow(occ.sp)+1):nrow(data),] #scores for global climate
scores.clim1<- pca.cal$li[((nrow(occ.sp))+which(cat50=="lw")),] #scores for rural climate
scores.clim2<- pca.cal$li[((nrow(occ.sp))+which(cat50=="hg")),] #scores for urban climate
row.sp1<-which(occ.sp[,28] == sp.list[i] & occ.sp[,26]=="low") # rows in data corresponding to rural
row.sp2<-which(occ.sp[,28] == sp.list[i] & occ.sp[,26]=="high") # rows in data corresponding to urban
scores.sp1<- pca.cal$li[row.sp1,] #scores for rural
scores.sp2<- pca.cal$li[row.sp2,] #scores for urban
if(length(row.sp1)>=5 & length(row.sp2)>=5){
#calculate z-scores for high and low urbanization separately
z1<- ecospat.grid.clim.dyn(scores.clim, scores.clim1, scores.sp1,R=100)
z2<- ecospat.grid.clim.dyn(scores.clim, scores.clim2, scores.sp2,R=100)
#plot niche shift from low to high urbanization
svg(paste(getwd(),"/raw_output/Fig_3/Fig_3_",paste(substr(strsplit(sp.list[i]," ")[[1]][1],1,3),substr(strsplit(sp.list[i]," ")[[1]][2],1,2),sep="."),"_50.svg",sep=""),height=8,width=12)
ecospat.plot.niche.dyn (z1, z2,quant=0.95, interest=1,title="",name.axis1="PC1",name.axis2="PC2",colinter="lightgray")
ecospat.shift.centroids(scores.sp1, scores.sp2, scores.clim1, scores.clim2)
dev.off()
}
# 3200m scale
scores.clim<- pca.cal$li[(nrow(occ.sp)+1):nrow(data),] #scores for global climate
scores.clim1<- pca.cal$li[((nrow(occ.sp))+which(cat3200=="lw")),] #scores for global climate
scores.clim2<- pca.cal$li[((nrow(occ.sp))+which(cat3200=="hg")),]
row.sp1<-which(occ.sp[,28] == sp.list[i] & occ.sp[,27]=="low") # rows in data corresponding to rural
row.sp2<-which(occ.sp[,28] == sp.list[i] & occ.sp[,27]=="high") # rows in data corresponding to urban
scores.sp1<- pca.cal$li[row.sp1,] #scores for rural
scores.sp2<- pca.cal$li[row.sp2,] #scores for urban
if(length(row.sp1)>=5 & length(row.sp2)>=5){
#calculate z-scores for high and low urbanization separately
z1<- ecospat.grid.clim.dyn(scores.clim, scores.clim1, scores.sp1,R=100)
z2<- ecospat.grid.clim.dyn(scores.clim, scores.clim2, scores.sp2,R=100)
#plot niche shift from low to high urbanization
svg(paste(getwd(),"/raw_output/Fig_3/Fig_3_",paste(substr(strsplit(sp.list[i]," ")[[1]][1],1,3),substr(strsplit(sp.list[i]," ")[[1]][2],1,2),sep="."),"_3200.svg",sep=""),height=8,width=12)
ecospat.plot.niche.dyn (z1, z2,quant=0.95, interest=1,title="",name.axis1="PC1",name.axis2="PC2",colinter="lightgray")
ecospat.shift.centroids(scores.sp1, scores.sp2, scores.clim1, scores.clim2)
dev.off()
}
}
# Figure 4. Scatterplot of CscoreSES and Dscore ---------------------------
svg(paste(getwd(),"/raw_output/Fig_4.svg",sep=""),height=(945/300),width=(945/300),pointsize=8)
par(mar=c(4,4,2,2))
plot(Dscore,CscoreSES,pch=19,col="black")
abline(lm(CscoreSES~Dscore))
points(Dscore[sigC_lower],CscoreSES[sigC_lower],pch=19,col="blue")
points(Dscore[sigC_greater],CscoreSES[sigC_greater],pch=19,col="red")
dev.off()
# Figure S1. Map of Belgium w/ site richness --------------------------------------
## Site map colored by species richness
p <- readOGR(paste(getwd(),"/gadm36_BEL_shp/gadm36_BEL_2.shp",sep=""))   #layer of data for species range
pal <- colorRampPalette(c("white", "blue"))
svg(filename=paste(getwd(),"/raw_output/Fig_S1.svg",sep=""),height=8,width=8)
options(warn=-1)
plot(p,col="grey90", fill=TRUE, warnings=F)
options(warn=0)
points(spa$LONG, spa$LAT,pch = 21,bg = pal(9)[rowSums(ZP2)],col="black")
legend("topright", legend = levels(as.factor(rowSums(ZP2))),pt.cex = 2,pt.bg=pal(9),pch = 21,bg="transparent",bty="n")
scalebar(10,type="bar")
dev.off()
# Figure S2. Distribution of Scores ---------------------------------------
svg(filename=paste(getwd(),"/raw_output/Fig_S2.svg",sep=""),height=2.05,width=3.15,pointsize=5)
par(mfrow=c(2,2),mar = c(4, 4, 0.1, 0.1),lwd=.5)
denscomp(Cgam,fitlwd=.5)
denscomp(SESCnorm,fitlwd=.5)
cdfcomp(Cgam,fitlwd=.5)
cdfcomp(SESCnorm,fitlwd=.5)
dev.off()
# Figure S3. Map of SDM habitat suitability ------------------------------
auc <- rep(NA,dim(ZP3)[2])
svg(paste(getwd(),"/raw_output/Fig_S3.svg",sep=""),height=8,width=12)
par(mfrow=c(4,4))
for(i in 1:dim(ZP3)[2]){
use <- clim[,c(2,1)]
use$occ <- ZP3[,i]
me <- dismo::maxent(env_use,use[,3])
r <- predict(me, env_use)
auc[i] <- me@results[5]
# Plot
# Draw a spatial plot and fill in habitat suitability values.
colfunc <- colorRampPalette(c("white", "black"))(1000)
#palette <- colorRampPalette(c("blue","red"))(maxColorValue)
plot(use[,1:2],col="white",bty="n",main=paste(sp.list[i]," (AUC = ",auc[i],")"))
points(use[use[,3] == 0,1], use[use[,3] == 0,2], pch=19,col = colfunc[cut(r, 1000)][use[,3] == 0],cex=2)
points(use[use[,3] == 1,1], use[use[,3] == 1,2], pch=15,col = colfunc[cut(r, 1000)][use[,3] == 1],cex=2)
}
dev.off()
# legend
svg(paste(getwd(),"/raw_output/Fig_S3_legend.svg",sep=""),height=2,width=2,pointsize=6)
colfunc <- colorRampPalette(c("white", "black"))(1000)
par(mfrow=c(1,1))
legend_image <- as.raster(matrix(rev(colfunc), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'habitat suitability')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
dev.off()
# STOPPED HERE for image sizing #
# Figure S4. Species site occurences --------------------------------
comm <- ZP2
rownames(comm) <- 1:81
colnames(comm) <- 1:28
lis <- melt(comm)
#Plot p-a matrix
svg(paste(getwd(),"/raw_output/Fig_S4.svg",sep=""),height=8,width=12)
par(mar=c(5, 12, 4, 2) + 0.1)
plot(lis[,1],lis[,2],xlab="site",ylab="",yaxt="n")
axis(side=2,at=1:28,labels=colnames(ZP2),las=1)
points(lis[lis$value==1,1], lis[lis$value==1,2], pch=19, col="black")
dev.off()
# Figure S5. Boxplot of D scores by species pair type ---------------------
meanD <- rep(NA,length(sp.list))
for(i in 1:length(sp.list)){
meanD[i] <- mean(D[which(apply(sp.combn, 2, function(r) any(r %in% i)))])
}
svg(filename=paste(getwd(),"/raw_output/Fig_S5.svg",sep=""),height=4.725,width=3.15,pointsize=5)
par(mfrow=c(2,1))
boxplot(d_anova$D ~ d_anova$pair,ylab="D score",xaxt="n",cex.axis=1.5)
plot(sp.nbocc[sp.nbocc>4],meanD,ylab = "",xlab="",bty="n",ylim=c(.2,.5),cex=2,cex.axis=1.5)
points(sp.nbocc[sp.nbocc>4][c(5,6,9,15)],meanD[c(5,6,9,15)],pch=19,col="black",cex=2)
points(sp.nbocc[sp.nbocc>4][c(7,10,12,13)],meanD[c(7,10,12,13)],pch=19,col="orange",cex=2)
dev.off()
# Figure S6. 2D niche use plot, generalists and specialists --------------------------------
#Plot 1st species, specialist
#Declare contrasting-ish colors
col_possible <- c("green","red","blue","darkmagenta","darkorange","gray","lightcoral","cyan","mediumorchid1","deepskyblue","goldenrod","navajowhite","mediumaquamarine","plum1","darkcyan","darkgreen","dimgray","firebrick4","gainsboro","darkseagreen4")
col_possible <- col_possible[1:16]
name.axis1 <- "Axis 1"
name.axis2 <- "Axis 2"
quant <- .975
ramp_1 <- colorRamp(c(col_possible[10],"white"))
col_1 <- rgb(ramp_1(seq(0, 1, length = 100)), max = 255)
svg(paste(getwd(),"/raw_output/Fig_S6.svg",sep=""),height=12,width=8)
par(mfrow=c(2,1))
image(x = z1$x, y = z1$y, z = z_uncor[10,,], col = rev(col_1), zlim = c(1e-05, 1), xlab = name.axis1, ylab = name.axis2)
#Plot all other specialist species in a loop
for (i in c(7,12,13)){
ramp <- colorRamp(c(col_possible[i],"white"))
col_n <- rgb(ramp(seq(0, 1, length = 100)), max = 255)
image(x = z1$x, y = z1$y, z = z_uncor[i,,], col = rev(col_n), zlim = c(1e-05, 1), xlab = name.axis1, ylab = name.axis2, add=T)
}
for(i in c(7,10,12,13)){
contour(x = z1$x, y = z1$y, z = z_uncor[i,,], add = TRUE, levels = quantile(z_uncor[z_uncor[i,,]>0], c(0, quant)), drawlabels = FALSE, lty = c(1,2), col = "black")
}
# Generalists
ramp_1 <- colorRamp(c(col_possible[5],"white"))
col_1 <- rgb(ramp_1(seq(0, 1, length = 100)), max = 255)
image(x = z1$x, y = z1$y, z = z_uncor[5,,], col = rev(col_1), zlim = c(1e-05, 1), xlab = name.axis1, ylab = name.axis2)
#Plot all other species in a loop
for (i in c(6,9,15)){
ramp <- colorRamp(c(col_possible[i],"white"))
col_n <- rgb(ramp(seq(0, 1, length = 100)), max = 255)
image(x = z1$x, y = z1$y, z = z_uncor[i,,], col = rev(col_n), zlim = c(1e-05, 1), xlab = name.axis1, ylab = name.axis2, add=T)
}
for(i in c(5,6,9,15)){
contour(x = z1$x, y = z1$y, z = z_uncor[i,,], add = TRUE, levels = quantile(z_uncor[z_uncor[i,,]>0], c(0, quant)), drawlabels = FALSE, lty = c(1,2), col = "black")
}
dev.off()
# Figure S7. PCenv biplot with species scores and LD1 axis ----------------
## Scale env vars with LD1
#plot scaling onto PC biplot
alt_name <- c("shade","sludge","sneller","cond","pH","depth","O2","Chla","SPM","ALK","SULF","DOC","tN","tP","aN","aP","SA","vSUB","vFLOAT","vEMERSE","vOV")
svg(paste(getwd(),"/raw_output/Fig_S7.svg",sep=""),height=8,width=12)
plot(scores.sp[,1], scores.sp[,2], col = "white",xlab = "PC1", ylab = "PC2",xlim=c(-5,5.4),ylim=c(-5,5.4))
alt.sp.name1 <- c("Dlc","Dm","Do","Dp","Se","Sv")
alt.sp.name2 <- c("Ag","Ar","Bl","Ce","Cs","Gt","Lq","Pa","Pt","Sm")
#points(scores.sp[c(6:9,15:16),1], scores.sp[c(6:9,15:16),2],pch=19,col="red",cex=2) # large
#points(scores.sp[c(1:5,10:14),1], scores.sp[c(1:5,10:14),2],pch=19,col="blue",cex=2) # small
arrows(0,0,pca.cal$co[,1]/1.5,pca.cal$co[,2]/1.5,col="darkgray")
text(pca.cal$co/1.5, alt_name,col="black",pos=3)
segments((-10*dfa$scaling[1]), (-10*dfa$scaling[2]), (10*dfa$scaling[1]), (10*dfa$scaling[2]), lwd=2,col="black")
text(scores.sp[c(6:9,15:16),1], scores.sp[c(6:9,15:16),2],labels=alt.sp.name1,col="red")
text(scores.sp[c(1:5,10:14),1], scores.sp[c(1:5,10:14),2],labels=alt.sp.name2,col="blue")
dev.off()
# Figure S8. PCA for rural vs. urban niche axes ----------------
for_dfapc_50 <- clim[c(which(cat50=="lw"), which(cat50=="hg")),3:23]
for_dfapc_3200 <- clim[c(which(cat3200=="lw"), which(cat3200=="hg")),3:23]
pc_50 <- prcomp(for_dfapc_50,center=T,scale=T)
pc_3200 <- prcomp(for_dfapc_3200,center=T,scale=T)
urban_rec <- cat50[c(which(cat50=="lw"), which(cat50=="hg"))]
urban_rec_3200 <- cat3200[c(which(cat3200=="lw"), which(cat3200=="hg"))]
# Plot of groupings
svg(paste(getwd(),"/raw_output/Fig_S8.svg",sep=""),height=8,width=8)
par(mfrow=c(2,1))
# 50 m
plot(pc_50$x[,1:2],type="n",bty="none",main="50m",font.main=1,family.main="sans")
points(pc_50$x[which(urban_rec=="lw"),1:2],,pch=19,col=rgb(34,139,34,max=255))
points(pc_50$x[which(urban_rec=="hg"),1:2],,pch=19,col=rgb(255,0,0,max=255))
x1 <- chull(pc_50$x[which(urban_rec=="lw"),1:2])
x1 <- c(x1,x1[1])
lines(pc_50$x[x1,1:2])
polygon(pc_50$x[x1,1:2],col=rgb(34,139,34,75,max=255))
x2 <- chull(pc_50$x[which(urban_rec=="hg"),1:2])
x2 <- c(x2,x2[1])
lines(pc_50$x[which(urban_rec=="hg")[x2],1:2])
polygon(pc_50$x[which(urban_rec=="hg")[x2],1:2],col=rgb(255,0,0,75,max=255))
# 3200 m
plot(pc_3200$x[,1:2],type="n",bty="none",main="3200m",font.main=1,family.main="sans")
points(pc_3200$x[which(urban_rec_3200=="lw"),1:2],,pch=19,col=rgb(34,139,34,max=255))
points(pc_3200$x[which(urban_rec_3200=="hg"),1:2],,pch=19,col=rgb(255,0,0,max=255))
x1 <- chull(pc_3200$x[which(urban_rec_3200=="lw"),1:2])
x1 <- c(x1,x1[1])
lines(pc_3200$x[x1,1:2])
polygon(pc_3200$x[x1,1:2],col=rgb(34,139,34,75,max=255))
x2 <- chull(pc_3200$x[which(urban_rec_3200=="hg"),1:2])
x2 <- c(x2,x2[1])
lines(pc_3200$x[which(urban_rec_3200=="hg")[x2],1:2])
polygon(pc_3200$x[which(urban_rec_3200=="hg")[x2],1:2],col=rgb(255,0,0,75,max=255))
legend(2,4,legend=c("rural","urban"),pch=19,col=c("forestgreen","red"),bty="n",cex=1.5,y.intersp=.5)
dev.off()
# Figure S9. Nestedness temperature plot ----------------------------------
# Points depict scale of %BUA (Built Up Area)
#Import BUA data
BUA <- read.csv("BUA.csv")
gray_pal <- colorRampPalette(c("white","black"))
BUA$Col_50 <- gray_pal(50)[as.numeric(cut(BUA$X50,breaks = 50))]
BUA$Col_3200 <- gray_pal(50)[as.numeric(cut(BUA$X3200,breaks = 50))]
#re-arrange BUA values to match the ordering in res
x <- as.character(BUA$PONDCODE)
y <- rownames(res$u)
order_50 <- BUA$Col_50[order(match(x,y))]
order_3200 <- BUA$Col_3200[order(match(x,y))]
#Color text of species name by body size category
lab_cols <- as.data.frame(cbind(names(res$c),rep(NA,length(names(res$c)))))
colnames(lab_cols) <- c("spec","size")
lab_cols$size <- factor(lab_cols$size,levels=c("small","large"))
lab_cols$size <- c("small","large","large","large","small","small","large","small","small","large","small","small","large","small","small","small")
lab_cols$color <- rep(NA,dim(lab_cols)[1])
lab_cols$color[lab_cols$size=="small"] <- "blue"
lab_cols$color[lab_cols$size=="large"] <- "red"
svg(paste(getwd(),"/raw_output/Fig_S9.svg",sep=""),height=12,width=12)
par(mar=c(5,4,6,2)+0.1)
x <- res
z <- x$u
z <- t(z[nrow(z):1,])
col = rev(heat.colors(100))
image(z,axes=F,col=col,ylim=c(-.01,1.3),xlim=c(-.06,1.2))
lines(x$smooth$x, 1 - x$smooth$y)
z <- res$comm
z <- t(z[nrow(z):1,])
points(rep(-.05,length((seq(1, 0, len = ncol(z))))),seq(1, 0, len = ncol(z)),pch=19,col=order_50,cex=.9)
points(rep(-.03,length((seq(1, 0, len = ncol(z))))),seq(1, 0, len = ncol(z)),pch=19,col=order_3200,cex=.9)
text(seq(1, 0, len = nrow(z)), rep(1,length((seq(1, 0, len = nrow(z))))),labels=colnames(res$comm),col=lab_cols$color,srt=45,adj=c(-.1,.5))
text(c(-.05,-.03),c(1,1),labels=c("BUA 50","BUA 3200"),col="black",srt=45,adj=c(-.1,.1))
dev.off()
# Figure S10. Niche plots for species pairs with limiting similarity -------
### Chydorus sphaericus and Daphnia pulex
row.sp1 <- which(occ.sp[,28] == sp.list[5]) # rows in data corresponding to sp1
row.sp2 <- which(occ.sp[,28] == sp.list[9]) # rows in data corresponding to sp1
# predict the scores on the axes
scores.clim<- pca.cal$li[(nrow(occ.sp)+1):nrow(data),] #scores for global climate
scores.sp1<- pca.cal$li[row.sp1,] #scores for sp1
scores.sp2<- pca.cal$li[row.sp2,] #scores for sp2
# calculation of occurence density and test of niche equivalency and similarity
z1<- ecospat.grid.clim.dyn(scores.clim, scores.clim, scores.sp1,R=100)
z2<- ecospat.grid.clim.dyn(scores.clim, scores.clim, scores.sp2,R=100)
#plot niche differences
svg(paste(getwd(),"/raw_output/Fig_S10a.svg",sep=""),height=8,width=12)
ecospat.plot.niche.dyn (z1, z2,quant=1, title=paste("niche of ", sp.list[5], " and ", sp.list[9],sep=""),name.axis1="PC1",name.axis2="PC2",colinter="lightgray")
points(scores.sp1,col="green3",pch=19)
points(scores.sp2,col="red3",pch=19)
segments(0,0,line[,1],line[,2],col=rgb(0,0,0,100,maxColorValue = 255),lwd=1)
text(text[,1],text[,2],alt_name,col="black",cex=1,lwd=3,adj=c(1,1))
dev.off()
### Chydorus sphaericus and Daphnia longispina complex
row.sp1 <- which(occ.sp[,28] == sp.list[5]) # rows in data corresponding to sp1
row.sp2 <- which(occ.sp[,28] == sp.list[6]) # rows in data corresponding to sp1
# predict the scores on the axes
scores.clim<- pca.cal$li[(nrow(occ.sp)+1):nrow(data),] #scores for global climate
scores.sp1<- pca.cal$li[row.sp1,] #scores for sp1
scores.sp2<- pca.cal$li[row.sp2,] #scores for sp2
# calculation of occurence density and test of niche equivalency and similarity
z1<- ecospat.grid.clim.dyn(scores.clim, scores.clim, scores.sp1,R=100)
z2<- ecospat.grid.clim.dyn(scores.clim, scores.clim, scores.sp2,R=100)
#plot niche differences
svg(paste(getwd(),"/raw_output/Fig_S10b.svg",sep=""),height=8,width=12)
ecospat.plot.niche.dyn (z1, z2,quant=1, title=paste("niche of ", sp.list[5], " and ", sp.list[6],sep=""),name.axis1="PC1",name.axis2="PC2",colinter="lightgray")
points(scores.sp1,col="green3",pch=19)
points(scores.sp2,col="red3",pch=19)
segments(0,0,line[,1],line[,2],col=rgb(0,0,0,100,maxColorValue = 255),lwd=1)
text(text[,1],text[,2],alt_name,col="black",cex=1,lwd=3,adj=c(1,1))
dev.off()
### Alona guttata and Daphnia pulex
row.sp1 <- which(occ.sp[,28] == sp.list[1]) # rows in data corresponding to sp1
row.sp2 <- which(occ.sp[,28] == sp.list[9]) # rows in data corresponding to sp1
# predict the scores on the axes
scores.clim<- pca.cal$li[(nrow(occ.sp)+1):nrow(data),] #scores for global climate
scores.sp1<- pca.cal$li[row.sp1,] #scores for sp1
scores.sp2<- pca.cal$li[row.sp2,] #scores for sp2
# calculation of occurence density and test of niche equivalency and similarity
z1<- ecospat.grid.clim.dyn(scores.clim, scores.clim, scores.sp1,R=100)
z2<- ecospat.grid.clim.dyn(scores.clim, scores.clim, scores.sp2,R=100)
#plot niche differences
svg(paste(getwd(),"/raw_output/Fig_S10c.svg",sep=""),height=8,width=12)
ecospat.plot.niche.dyn (z1, z2,quant=1, title=paste("niche of ", sp.list[1], " and ", sp.list[9],sep=""),name.axis1="PC1",name.axis2="PC2",colinter="lightgray")
points(scores.sp1,col="green3",pch=19)
points(scores.sp2,col="red3",pch=19)
segments(0,0,line[,1],line[,2],col=rgb(0,0,0,100,maxColorValue = 255),lwd=1)
text(text[,1],text[,2],alt_name,col="black",cex=1,lwd=3,adj=c(1,1))
dev.off()
########## Extra material for revisions ##########
### 1. Plots of rural and urban environment at 50m and 3200m scale
scores.clim<- pca.cal$li[(nrow(occ.sp)+1):nrow(data),] #scores for global climate
scores.clim1<- pca.cal$li[((nrow(occ.sp))+which(cat50=="lw")),] #scores for rural climate
scores.clim2<- pca.cal$li[((nrow(occ.sp))+which(cat50=="hg")),] #scores for urban climate
z1<- ecospat.grid.clim.dyn(scores.clim, scores.clim, scores.clim1,R=100)
z2<- ecospat.grid.clim.dyn(scores.clim, scores.clim, scores.clim2,R=100)
ecospat.plot.niche.dyn (z1, z2,quant=1, title="Rural (green) and urban (red) niche, 3200m",name.axis1="PC1",name.axis2="PC2",colinter="lightgray")
segments(0,0,line[,1],line[,2],col=rgb(0,0,0,100,maxColorValue = 255),lwd=1)
text(text[,1],text[,2],alt_name,col="black",cex=1,lwd=3,adj=c(1,1))
scores.clim1<- pca.cal$li[((nrow(occ.sp))+which(cat3200=="lw")),] #scores for rural climate
scores.clim2<- pca.cal$li[((nrow(occ.sp))+which(cat3200=="hg")),] #scores for urban climate
## Boxplot of submerged vegetation
boxplot(env$submerse[cat50 == "lw"],env$submerse[cat50 == "hg"],main="vSUB at 50m (left is rural, right is urban)")
boxplot(env$submerse[cat3200 == "lw"],env$submerse[cat3200 == "hg"],main="vSUB at 3200m (left is rural, right is urban)")
### 2. Evaluation of z values and their relationship with overall occupancy
sum_z_list <- rep(NA,length(sp.list))
for(i in 1:length(sp.list)){
sp.list[i]
row.sp1<-which(occ.sp[,28] == sp.list[i])
scores.clim<- pca.cal$li[(nrow(occ.sp)+1):nrow(data),] #scores for global climate
scores.sp1<- pca.cal$li[row.sp1,] #scores for sp1
z1<- ecospat.grid.clim.dyn(scores.clim, scores.clim, scores.sp1,R=100)
sum_z_list[i] <- sum(z1$z.cor[,,1])
}
# We can see that total z *is* associated strongly with the number of occupied sites.
plot(sum_z_list,sp.nbocc[sp.nbocc>4])
# Next we check whether D is associated with the difference in the number of occupied sites between pairs of species
d12 <- rep(NA,dim(sp.combn)[2])
for(i in 1:(ncol(sp.combn))) {
nm1 <- sp.nbocc[sp.nbocc>4][sp.combn[1,i]]
nm2 <- sp.nbocc[sp.nbocc>4][sp.combn[2,i]]
d12[i] <- abs(nm1-nm2)
}
plot(d12,D)
# Color points by whether they are gen-gen, gen-spec, spec-spec species pairs
points(d12[ss_pairs],D[ss_pairs],pch=19,col="black")
points(d12[gg_pairs],D[gg_pairs],pch=19,col="orange")
points(d12[sg_pairs],D[sg_pairs],pch=19,col="skyblue")
# Now I check whether a species average D is associated with its # sites occupied
meanD <- rep(NA,length(sp.list))
for(i in 1:length(sp.list)){
meanD[i] <- mean(D[which(apply(sp.combn, 2, function(r) any(r %in% i)))])
}
plot(sp.nbocc[sp.nbocc>4],meanD,ylab = "mean D",xlab="number of site occurences",bty="n",ylim=c(.2,.5))
points(sp.nbocc[sp.nbocc>4][c(5,6,8,9)],meanD[c(5,6,8,9)],pch=19,col="black")
points(sp.nbocc[sp.nbocc>4][c(7,10:12)],meanD[c(7,10:12)],pch=19,col="orange")
# This is now incorporated into Figure S2.
### 3. Stats analysis whether sites differed in environmental variables.
mod50 <- betadisper(dist(scale(for_dfapc_50)),urban_rec)
anova(mod50)
mod3200 <- betadisper(dist(scale(for_dfapc_3200)),urban_rec_3200)
anova(mod3200)
save.image("28_01_2022.RData")
q()
